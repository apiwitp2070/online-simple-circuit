{"version":3,"sources":["components/node/nodeStyle.ts","components/node/portTemplate.ts","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ICshapeStyle","name","fill","desiredSize","go","nodeEllipse","twoWayLineA","stroke","twoWayLineB","FromBottom","input","fromSpot","Bottom","fromLinkable","toSpot","Top","toLinkable","toMaxLinks","cursor","FromTop","InoutPort","Right","Left","SwitchLeft","SwitchRight","count","jsonData","FileSaver","require","sys","Button","initDiagram","red","green","black","blue","yellow","grey","KAPPA","Math","sqrt","$","make","diagram","WheelZoom","addDiagramListener","e","idx","document","title","indexOf","isModified","substr","palette","palette2","grid","visible","Grid","gridCellSize","defineFigureGenerator","shape","w","h","add","Bezier","close","setSpots","linkTemplate","routing","AvoidsNodes","curve","JumpOver","corner","relinkableFrom","relinkableTo","selectionAdorned","shadowOffset","shadowBlur","shadowColor","ofObject","strokeWidth","parameter1","ofModel","model","linkFromPortIdProperty","linkToPortIdProperty","sharedToolTip","margin","d","category","nodeStyle","parse","makeTwoWay","stringify","toolTip","inputTemplate","portId","alignment","doubleClick","obj","startTransaction","shp","findObject","updateStates","commitTransaction","outputTemplate","clkTemplate","text","vccTemplate","gndTemplate","angle","andTemplate","orTemplate","xorTemplate","norTemplate","xnorTemplate","nandTemplate","notTemplate","dffTemplate","ledRedTemplate","ledYellowTemplate","ledGreenTemplate","resistorTemplate","switchTemplate","opacity","lineA","lineC","twoWaySwitchATemplate","lineB","twoWaySwitchBTemplate","sevenSegmentTemplate","oldskip","skipsUndoManager","nodes","each","node","setOutputLinks","doInput","doClk","getinput10","setvalue","doAnd","doOr","doXor","getvalue","getinput8","doNot","doNand","doNor","doXnor","getinputdff","doDff","getinput7seg","do7seg","linksConnected","link","doOutput","stat","doSwitch","do2SwitchA","in1","in2","do2SwitchB","doResistor","gnd","doLEDgreen","doLEDyellow","doLEDred","doVcc","doGnd","color","findLinksOutOf","pid","value","findLinksInto","val","a","window","confirm","newData","fromJson","console","log","data","toJson","blob","Blob","type","saveAs","Data","nodeTemplateMap","nodeDataArray","loop","setTimeout","newFile","load","save","Main","setSystemValue","useEffect","className","onClick","htmlFor","id","onChange","preventDefault","reader","FileReader","onload","target","result","readAsText","files","loadFile","placeholder","handleJsonText","divClassName","style","height","checked","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88d3216f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport '../../App.css';  // contains .diagram-component CSS\r\n\r\n// black rectangle for IC\r\nexport function ICshapeStyle() {\r\n  return {\r\n    name: \"NODESHAPE\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(100, 40),\r\n  };\r\n}\r\n\r\n\r\nexport  function nodeEllipse() {\r\n  return {\r\n    fill: \"gray\",\r\n    desiredSize: new go.Size(8, 12),\r\n  }\r\n}\r\n\r\nexport function ledRedStyle() {\r\n  return {\r\n    name: \"LED\",\r\n    fill: \"gray\",\r\n    desiredSize: new go.Size(20, 40),\r\n  }\r\n}\r\n\r\nexport function ledGreenStyle() {\r\n  return {\r\n    name: \"LED\",\r\n    fill: \"gray\",\r\n    desiredSize: new go.Size(20, 40),\r\n  }\r\n}\r\n\r\nexport function ledYellowStyle() {\r\n  return {\r\n    name: \"LED\",\r\n    fill: \"gray\",\r\n    desiredSize: new go.Size(20, 40),\r\n  }\r\n}\r\n\r\nexport function resistorStyle() {\r\n  return {\r\n    fill: \"#D9CAB3\",\r\n    desiredSize: new go.Size(60, 20),\r\n  }\r\n}\r\n\r\nexport function sevenSegmentStyle() {\r\n  return {\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(100, 150),\r\n  }\r\n}\r\n\r\nexport function numberPart() {\r\n  return {\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartA() {\r\n  return {\r\n    name: \"A\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartB() {\r\n  return {\r\n    name: \"B\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartC() {\r\n  return {\r\n    name: \"C\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartD() {\r\n  return {\r\n    name: \"D\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartE() {\r\n  return {\r\n    name: \"E\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartF() {\r\n  return {\r\n    name: \"F\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function numberPartG() {\r\n  return {\r\n    name: \"G\",\r\n    stroke: \"white\",\r\n    fill: \"black\",\r\n    desiredSize: new go.Size(5, 55),\r\n  }\r\n}\r\n\r\nexport function twoWayLineA() {\r\n  return {\r\n    name: \"A\",\r\n    stroke: \"white\",\r\n    fill: \"white\",\r\n    desiredSize: new go.Size(1,30),\r\n  }\r\n}\r\n\r\nexport function twoWayLineB() {\r\n  return {\r\n    name: \"B\",\r\n    stroke: \"white\",\r\n    fill: \"white\",\r\n    desiredSize: new go.Size(1,30),\r\n  }\r\n}\r\n\r\nexport function twoWayLineC() {\r\n  return {\r\n    name: \"C\",\r\n    stroke: \"white\",\r\n    fill: \"white\",\r\n    desiredSize: new go.Size(1,30),\r\n  }\r\n}","import React from 'react';\r\n\r\nimport * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport '../../App.css';  // contains .diagram-component CSS\r\n\r\n\r\n// for bottom output port and top input port\r\nexport function FromBottom(input: any) {\r\n  return {\r\n    desiredSize: new go.Size(6, 6),\r\n    fill: \"#c3c6cd\",\r\n    fromSpot: go.Spot.Bottom,\r\n    fromLinkable: !input,\r\n    toSpot: go.Spot.Top,\r\n    toLinkable: input,\r\n    toMaxLinks: 1,\r\n    cursor: \"pointer\"\r\n  };\r\n}\r\n\r\n// for top output port and bottom input port\r\nexport function FromTop(input: any) {\r\n  return {\r\n    desiredSize: new go.Size(6, 6),\r\n    fill: \"#c3c6cd\",\r\n    fromSpot: go.Spot.Top,\r\n    fromLinkable: !input,\r\n    toSpot: go.Spot.Bottom,\r\n    toLinkable: input,\r\n    toMaxLinks: 1,\r\n    cursor: \"pointer\"\r\n  };\r\n}\r\n\r\n// for input and output\r\nexport function InoutPort(input: any) {\r\n  return {\r\n    desiredSize: new go.Size(6, 6),\r\n    fill: \"#c3c6cd\",\r\n    fromSpot: go.Spot.Right, \r\n    fromLinkable: !input,\r\n    toSpot: go.Spot.Left,\r\n    toLinkable: input,\r\n    toMaxLinks: 1,\r\n    cursor: \"pointer\"\r\n  };\r\n}\r\n\r\n// for switch\r\nexport function SwitchLeft() {\r\n  return {\r\n    desiredSize: new go.Size(6, 6),\r\n    fill: \"#c3c6cd\",\r\n    fromSpot: go.Spot.Left, \r\n    fromLinkable: true,\r\n    toSpot: go.Spot.Left,\r\n    toLinkable: true,\r\n    toMaxLinks: 1,\r\n    cursor: \"pointer\"\r\n  };\r\n}\r\n\r\nexport function SwitchRight() {\r\n  return {\r\n    desiredSize: new go.Size(6, 6),\r\n    fill: \"#c3c6cd\",\r\n    fromSpot: go.Spot.Right, \r\n    fromLinkable: true,\r\n    toSpot: go.Spot.Right,\r\n    toLinkable: true,\r\n    toMaxLinks: 1,\r\n    cursor: \"pointer\"\r\n  };\r\n}","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport '../App.css';  // contains .diagram-component CSS\r\nimport { ICshapeStyle, nodeEllipse, ledRedStyle, ledYellowStyle, ledGreenStyle, resistorStyle, sevenSegmentStyle, numberPart, numberPartG, numberPartF, numberPartA, numberPartB, numberPartC,numberPartD,numberPartE, twoWayLineA, twoWayLineB, twoWayLineC } from './node/nodeStyle';\r\nimport { FromBottom, FromTop, InoutPort, SwitchLeft, SwitchRight } from './node/portTemplate';\r\n\r\nvar count=0;\r\nvar jsonData = {};\r\nvar FileSaver = require('file-saver');\r\n\r\n/*\r\n  universal system variable; will check value of this variable in every main loop\r\n    sys = 0 : do nothing\r\n    sys = 1 : call function new file\r\n    sys = 2 : call function load file\r\n    sys = 3 : call function save file\r\n*/\r\nvar sys = 0\r\n\r\n//Button styling\r\nconst Button =\r\n  'px-8 py-5 bg-black text-white text-xl block transition ease-out duration-300 focus:outline-none hover:bg-white hover:text-black';\r\n\r\nfunction initDiagram() {\r\n\r\n  // define variable\r\n  var red = \"orangered\";  // 0 or false\r\n  var green = \"forestgreen\";  // 1 or true\r\n  var black = \"black\"\r\n  var white = \"white\"\r\n  var blue = \"blue\"\r\n  var yellow = \"yellow\"\r\n  var grey = \"grey\"\r\n  var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\r\n\r\n\r\n  const $ = go.GraphObject.make;\r\n  // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\r\n  const diagram =\r\n    $(go.Diagram,\r\n      {\r\n        \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\r\n        \"draggingTool.isGridSnapEnabled\": true,\r\n        'undoManager.isEnabled': true,\r\n        'initialScale': 1.5,\r\n      });\r\n  \r\n  // when the document is modified, add a \"*\" to the title\r\n  diagram.addDiagramListener(\"Modified\", function(e:any) {\r\n    var idx = document.title.indexOf(\"*\");\r\n    if (diagram.isModified) {\r\n      if (idx < 0) document.title += \"*\";\r\n    } else {\r\n      if (idx >= 0) document.title = document.title.substr(0, idx);\r\n    }\r\n  });\r\n\r\n  // create a new Platte\r\n  var palette = new go.Palette(\"palette\");\r\n  var palette2 = new go.Palette(\"palette2\");\r\n\r\n  // grid\r\n  diagram.grid.visible = true;\r\n  diagram.grid =\r\n  $(go.Panel, go.Panel.Grid,  // or \"Grid\"\r\n    { gridCellSize: new go.Size(10, 10) },\r\n    $(go.Shape, \"LineH\", { stroke: \"lightgray\" }),\r\n    $(go.Shape, \"LineV\", { stroke: \"lightgray\" })\r\n  );\r\n\r\n  go.Shape.defineFigureGenerator(\"HalfEllipse\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n      .add(new go.PathFigure(0, 0, true)\r\n      .add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, KAPPA * w, 0, w, (.5 - KAPPA / 2) * h))\r\n      .add(new go.PathSegment(go.PathSegment.Bezier, 0, h, w, (.5 + KAPPA / 2) * h, KAPPA * w, h).close()))\r\n      .setSpots(0, 0.156, 0.844, 0.844);\r\n  });\r\n  \r\n  // creates relinkable Links that will avoid crossing Nodes when possible \r\n  // and will jump over other Links in their paths\r\n  diagram.linkTemplate =\r\n    $(go.Link,\r\n      {\r\n        routing: go.Link.AvoidsNodes,\r\n        curve: go.Link.JumpOver,\r\n        corner: 3,\r\n        relinkableFrom: true, relinkableTo: true,\r\n        selectionAdorned: false, // Links are not adorned when selected so that their color remains visible.\r\n        shadowOffset: new go.Point(0, 0), shadowBlur: 5, shadowColor: \"blue\",\r\n      },\r\n      new go.Binding(\"isShadowed\", \"isSelected\").ofObject(),\r\n      $(go.Shape,\r\n        { name: \"SHAPE\", strokeWidth: 2, stroke: red , parameter1: 0}), new go.Binding(\"stroke\", \"color\").ofModel(), new go.Binding(\"parameter1\", \"value\")/*.ofModel()*/);\r\n    \r\n  // Graph link model to identify the port\r\n  diagram.model = \r\n    $(go.GraphLinksModel,\r\n      { linkFromPortIdProperty: \"fromPort\",  // required information:\r\n        linkToPortIdProperty: \"toPort\",      // identifies data property names\r\n    });\r\n    \r\n  // node template helpers (Tooltip when hover with mouse)\r\n  var sharedToolTip =\r\n    $(\"ToolTip\",\r\n      { \"Border.figure\": \"RoundedRectangle\" },\r\n      $(go.TextBlock, { margin: 2 },\r\n        new go.Binding(\"text\", \"\", function(d) { return d.category; })));\r\n\r\n  // node settings\r\n\r\n  function nodeStyle() {\r\n    return [new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n    new go.Binding(\"isShadowed\", \"isSelected\").ofObject(),\r\n    {\r\n      selectionAdorned: false,\r\n      shadowOffset: new go.Point(0, 0),\r\n      shadowBlur: 15,\r\n      shadowColor: \"blue\",\r\n      toolTip: sharedToolTip\r\n    }];\r\n  }\r\n  \r\n  // define templates for each type of node\r\n\r\n  var inputTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Circle\", ICshapeStyle(),\r\n        { fill: red }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(false),\r\n        { portId: \"\", alignment: new go.Spot(0.4, 0.5) }, new go.Binding(\"fill\", \"color\").ofModel()),\r\n      { // if double-clicked, an input node will change its value, represented by the color.\r\n        doubleClick: function(e, obj:any) {\r\n          e.diagram.startTransaction(\"Toggle Input\");\r\n          var shp = obj.findObject(\"NODESHAPE\");\r\n          shp.fill = (shp.fill === green) ? red : green;\r\n          updateStates();\r\n          e.diagram.commitTransaction(\"Toggle Input\");\r\n        }\r\n      }\r\n    );\r\n\r\n  var outputTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Square\", ICshapeStyle(),\r\n        { fill: \"grey\" }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(true),\r\n        { portId: \"\", alignment: new go.Spot(0, 0.5)}, new go.Binding(\"fill\", \"color\").ofModel())\r\n    );\r\n\r\n  var clkTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Rectangle\", ICshapeStyle(),\r\n        { fill: red }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(false),\r\n        { portId: \"\", alignment: new go.Spot(1, 0.5) }, new go.Binding(\"fill\", \"color\").ofModel()),\r\n      $(go.TextBlock, { text: \"clk T=1500ms\", stroke: \"white\"  }),\r\n    );\r\n\r\n  var vccTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Rectangle\", ICshapeStyle(),\r\n        { fill: \"orange\" }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(false),\r\n        { portId: \"\", alignment: new go.Spot(1, 0.5) }, new go.Binding(\"fill\", \"color\").ofModel()),\r\n      $(go.TextBlock, { text: \"Vcc\", stroke: \"white\"  }),\r\n    );\r\n\r\n  var gndTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"triangle\", ICshapeStyle(),\r\n        { fill: \"grey\", angle: 180 }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(false),\r\n        { portId: \"\", alignment: new go.Spot(0.75, 0.5) }, new go.Binding(\"fill\", \"color\").ofModel()),\r\n      $(go.TextBlock, { text: \"Gnd\", stroke: \"black\"  }),\r\n    );\r\n\r\n  var andTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n      $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n        { alignment: new go.Spot(0.05, 0.5)}),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input port12\r\n      $(go.Shape, \"Rectangle\", FromTop(false),\r\n        { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//output port11 of port13\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input port10\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n      $(go.Shape, \"Rectangle\", FromTop(false),\r\n        { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 of of port10 port9\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input port2\r\n      $(go.Shape, \"Rectangle\", FromBottom(false),\r\n        { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//output port3 of port1 port2\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input port4\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n      $(go.Shape, \"Rectangle\", FromBottom(false),\r\n        { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 of port4 port5\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n      $(go.TextBlock, { text: \"7408 and\", stroke: \"white\" }),\r\n    );\r\n\r\n  var orTemplate =\r\n      $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n      $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n        { alignment: new go.Spot(0.05, 0.5)}),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input port12\r\n      $(go.Shape, \"Rectangle\", FromTop(false),\r\n        { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//output port11 of port13\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input port10\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n      $(go.Shape, \"Rectangle\", FromTop(false),\r\n        { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 of of port10 port9\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input port2\r\n      $(go.Shape, \"Rectangle\", FromBottom(false),\r\n        { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//output port3 of port1 port2\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input port4\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n      $(go.Shape, \"Rectangle\", FromBottom(false),\r\n        { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 of port4 port5\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n      $(go.TextBlock, { text: \"7432 or\", stroke: \"white\" }),\r\n    );\r\n\r\n  var xorTemplate =\r\n      $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n      $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n        { alignment: new go.Spot(0.05, 0.5)}),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input port12\r\n      $(go.Shape, \"Rectangle\", FromTop(false),\r\n        { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//output port11 of port13\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input port10\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n      $(go.Shape, \"Rectangle\", FromTop(false),\r\n        { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 of of port10 port9\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input port2\r\n      $(go.Shape, \"Rectangle\", FromBottom(false),\r\n        { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//output port3 of port1 port2\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input port4\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n      $(go.Shape, \"Rectangle\", FromBottom(false),\r\n        { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 of port4 port5\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n      $(go.TextBlock, { text: \"7486 xor\", stroke: \"white\" }),\r\n    );\r\n\r\n  var norTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n    $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n      { alignment: new go.Spot(0.05, 0.5)}),\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input port12\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//output port11 of port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input port10\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 of of port10 port9\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input port2\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//output port3 of port1 port2\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input port4\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 of port4 port5\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n    $(go.TextBlock, { text: \"7402 nor\", stroke: \"white\" }),\r\n  );\r\n\r\n  var xnorTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n    $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n      { alignment: new go.Spot(0.05, 0.5)}),\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input port12\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//output port11 of port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input port10\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 of of port10 port9\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input port2\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//output port3 of port1 port2\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input port4\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 of port4 port5\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n    $(go.TextBlock, { text: \"74266 xnor\", stroke: \"white\" }),\r\n  );\r\n\r\n  var nandTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n    $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n      { alignment: new go.Spot(0.05, 0.5)}),\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input port12\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//output port11 of port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input port10\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 of of port10 port9\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input port2\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//output port3 of port1 port2\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input port4\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 of port4 port5\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n    $(go.TextBlock, { text: \"7400 nand\", stroke: \"white\" }),\r\n  );\r\n\r\n  var notTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n    $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n      { alignment: new go.Spot(0.05, 0.5)}),\r\n    $(go.Shape, \"Rectangle\", FromBottom(true), //fb botout topin , ft topout botin\r\n      { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input port13\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//output port12 from port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//input port11\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//output port10 from port11\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//input port9\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output port8 from port9\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input port1\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//output port2 from port1\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//input port3 \r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//output port4 from port3\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//input port5\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output port6 from port5\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n    $(go.TextBlock, { text: \"7404 not\", stroke: \"white\" }),\r\n  );\r\n\r\n  var dffTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ICshapeStyle()),\r\n    $(go.Shape, \"HalfEllipse\", nodeEllipse(),\r\n      { alignment: new go.Spot(0.05, 0.5)}),\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port14\", alignment: new go.Spot(0.05, 0) }),//vcc port14\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port13\", alignment: new go.Spot(0.2, 0) }),//input clr port13\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port12\", alignment: new go.Spot(0.35, 0) }),//input d port12\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port11\", alignment: new go.Spot(0.5, 0) }),//input clk port11\r\n    $(go.Shape, \"Rectangle\", FromBottom(true),\r\n      { portId: \"port10\", alignment: new go.Spot(0.65, 0) }),//input pre port10 \r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port9\", alignment: new go.Spot(0.8, 0) }),//output q port9\r\n    $(go.Shape, \"Rectangle\", FromTop(false),\r\n      { portId: \"port8\", alignment: new go.Spot(0.95, 0) }),//output q' port8 \r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.05, 1) }),//input clr port1\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.2, 1) }),//input d port2 \r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port3\", alignment: new go.Spot(0.35, 1) }),//input clk port3 \r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port4\", alignment: new go.Spot(0.5, 1) }),//input pre port4 \r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port5\", alignment: new go.Spot(0.65, 1) }),//output q port5\r\n    $(go.Shape, \"Rectangle\", FromBottom(false),\r\n      { portId: \"port6\", alignment: new go.Spot(0.8, 1) }),//output q' port6 \r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port7\", alignment: new go.Spot(0.95, 1) }),//gnd port7\r\n    $(go.TextBlock, { text: \"7474 dff\", stroke: \"white\" }),\r\n  );\r\n\r\n  var ledRedTemplate = \r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ledRedStyle()),\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.2, 1) }),//left port\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.8, 1) }),//right port\r\n    $(go.TextBlock, { text: \"led\", stroke: \"white\" }),\r\n  );\r\n\r\n  var ledYellowTemplate = \r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ledYellowStyle()),\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.2, 1) }),//left port\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.8, 1) }),//right port\r\n    $(go.TextBlock, { text: \"led\", stroke: \"white\" }),\r\n  );\r\n\r\n  var ledGreenTemplate = \r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n    $(go.Shape, \"Rectangle\", ledGreenStyle()),\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port1\", alignment: new go.Spot(0.2, 1) }),//left port\r\n    $(go.Shape, \"Rectangle\", FromTop(true),\r\n      { portId: \"port2\", alignment: new go.Spot(0.8, 1) }),//right port\r\n    $(go.TextBlock, { text: \"led\", stroke: \"white\" }),\r\n  );\r\n\r\n  var resistorTemplate = \r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"RoundedRectangle\", resistorStyle()),\r\n      $(go.Shape, \"Rectangle\", InoutPort(true),\r\n        { portId: \"in\", alignment: new go.Spot(0, 0.5) }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(false),\r\n        { portId: \"out\", alignment: new go.Spot(1, 0.5) }),\r\n      $(go.Shape, {fill: \"brown\", desiredSize: new go.Size(5, 20), alignment: new go.Spot(0.2, 0.5)}),\r\n      $(go.Shape, {fill: \"black\", desiredSize: new go.Size(5, 20), alignment: new go.Spot(0.4, 0.5)}),\r\n      $(go.Shape, {fill: \"orange\", desiredSize: new go.Size(5, 20), alignment: new go.Spot(0.6, 0.5)}),\r\n      $(go.Shape, {fill: \"#AB6D23\", desiredSize: new go.Size(5, 20), alignment: new go.Spot(0.8, 0.5)}),   \r\n  );\r\n\r\n  var switchTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Square\", ICshapeStyle()),\r\n      $(go.Shape, \"Rectangle\", InoutPort(true),\r\n        { portId: \"in\", alignment: new go.Spot(0, 0.5) }),\r\n      $(go.Shape, \"Rectangle\", InoutPort(false),\r\n        { portId: \"out\", alignment: new go.Spot(0.4, 0.5) }),\r\n      $(go.Shape, twoWayLineA(), { alignment: new go.Spot(0.2, 0.35), angle: 60 }),\r\n      $(go.Shape, twoWayLineC(), { alignment: new go.Spot(0.2, 0.5), angle: 90, opacity: 0, }),\r\n      { // double-click toggle switch on or off. represent by its line angle.\r\n        doubleClick: function(e, obj:any) {\r\n          e.diagram.startTransaction(\"Toggle Switch\");\r\n          var lineA = obj.findObject(\"A\"); //60 degree angle line\r\n          var lineC = obj.findObject(\"C\"); //straight line when turn on switch\r\n          lineA.opacity = (lineA.opacity == 1) ? 0 : 1;\r\n          lineC.opacity = (lineC.opacity == 1) ? 0 : 1;\r\n          updateStates();\r\n          e.diagram.commitTransaction(\"Toggle Switch\");\r\n      }}\r\n    );\r\n    \r\n  var twoWaySwitchATemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Square\", ICshapeStyle()),\r\n      $(go.Shape, \"Rectangle\", SwitchRight(),\r\n        { portId: \"port1\", alignment: new go.Spot(0.4, 0.2) }),\r\n      $(go.Shape, \"Rectangle\", SwitchRight(),\r\n        { portId: \"port2\", alignment: new go.Spot(0.4, 0.8) }),\r\n      $(go.Shape, \"Rectangle\", SwitchLeft(),\r\n        { portId: \"port3\", alignment: new go.Spot(0, 0.5) }),\r\n      $(go.Shape, twoWayLineA(), { alignment: new go.Spot(0.2, 0.65), angle: -70 }),\r\n      $(go.Shape, twoWayLineB(), { alignment: new go.Spot(0.2, 0.35), angle: 70, opacity: 0 }),\r\n      { // if double-clicked, an input node will change its value, represented by the color.\r\n        doubleClick: function(e, obj:any) {\r\n          e.diagram.startTransaction(\"Toggle Switch\");\r\n          var lineA = obj.findObject(\"A\");\r\n          var lineB = obj.findObject(\"B\");\r\n          lineA.opacity = (lineA.opacity == 1) ? 0 : 1;\r\n          lineB.opacity = (lineB.opacity == 1) ? 0 : 1;\r\n          updateStates();\r\n          e.diagram.commitTransaction(\"Toggle Switch\");\r\n      }}\r\n    );\r\n\r\n  var twoWaySwitchBTemplate =\r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Square\", ICshapeStyle()),\r\n      $(go.Shape, \"Rectangle\", SwitchLeft(),\r\n        { portId: \"port1\", alignment: new go.Spot(0, 0.2) }),\r\n      $(go.Shape, \"Rectangle\", SwitchLeft(),\r\n        { portId: \"port2\", alignment: new go.Spot(0, 0.8) }),\r\n      $(go.Shape, \"Rectangle\", SwitchRight(),\r\n        { portId: \"port3\", alignment: new go.Spot(0.4, 0.5) }),\r\n      $(go.Shape, twoWayLineA(), { alignment: new go.Spot(0.2, 0.35), angle: -70 }),\r\n      $(go.Shape, twoWayLineB(), { alignment: new go.Spot(0.2, 0.65), angle: 70, opacity: 0 }),\r\n      { // double-click change the output port that input will be connect to, represent by its line.\r\n        doubleClick: function(e, obj:any) {\r\n          e.diagram.startTransaction(\"Toggle Switch\");\r\n          var lineA = obj.findObject(\"A\");\r\n          var lineB = obj.findObject(\"B\");\r\n          lineA.opacity = (lineA.opacity == 1) ? 0 : 1;\r\n          lineB.opacity = (lineB.opacity == 1) ? 0 : 1;\r\n          updateStates();\r\n          e.diagram.commitTransaction(\"Toggle Switch\");\r\n      }}\r\n    );\r\n\r\n  var sevenSegmentTemplate = \r\n    $(go.Node, \"Spot\", nodeStyle(),\r\n      $(go.Shape, \"Rectangle\", sevenSegmentStyle()),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"portG\", alignment: new go.Spot(0.1, 0) }),//G\r\n        $(go.Shape, \"Rectangle\", numberPartG(),\r\n          { angle: 90, alignment: new go.Spot(0.4, 0.5)}),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"portF\", alignment: new go.Spot(0.3, 0) }),//F\r\n        $(go.Shape, \"Rectangle\", numberPartF(),\r\n          { alignment: new go.Spot(0.1, 0.3)}),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"portVcc\", alignment: new go.Spot(0.5, 0) }),//vcc\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"portA\", alignment: new go.Spot(0.7, 0) }),//A\r\n        $(go.Shape, \"Rectangle\", numberPartA(),\r\n          { angle: 90, alignment: new go.Spot(0.4, 0.1)}),\r\n      $(go.Shape, \"Rectangle\", FromBottom(true),\r\n        { portId: \"portB\", alignment: new go.Spot(0.9, 0) }),//B\r\n        $(go.Shape, \"Rectangle\", numberPartB(),\r\n          { alignment: new go.Spot(0.7, 0.3)}),\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"portE\", alignment: new go.Spot(0.1, 1) }),//E\r\n        $(go.Shape, \"Rectangle\", numberPartE(),\r\n          { alignment: new go.Spot(0.1, 0.7)}),\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"portD\", alignment: new go.Spot(0.3, 1) }),//D\r\n        $(go.Shape, \"Rectangle\", numberPartD(),\r\n          { angle: 90, alignment: new go.Spot(0.4, 0.9)}),\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"portCom\", alignment: new go.Spot(0.5, 1) }),//Com \r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"portC\", alignment: new go.Spot(0.7, 1) }),//C\r\n        $(go.Shape, \"Rectangle\", numberPartC(),\r\n          { alignment: new go.Spot(0.7, 0.7)}),\r\n      $(go.Shape, \"Rectangle\", FromTop(true),\r\n        { portId: \"portDP\", alignment: new go.Spot(0.9, 1) }),//DP\r\n      $(go.Shape, \"Circle\", \r\n        { name:\"DP\",desiredSize: new go.Size(10, 10), stroke: \"white\", fill: \"black\", alignment: new go.Spot(0.85, 0.9) }),\r\n    );\r\n\r\n  // add the templates created above to diagram and palette\r\n  diagram.nodeTemplateMap.add(\"clk\", clkTemplate);\r\n  diagram.nodeTemplateMap.add(\"input\", inputTemplate);\r\n  diagram.nodeTemplateMap.add(\"output\", outputTemplate);\r\n  diagram.nodeTemplateMap.add(\"and\", andTemplate);\r\n  diagram.nodeTemplateMap.add(\"or\", orTemplate);\r\n  diagram.nodeTemplateMap.add(\"xor\", xorTemplate);\r\n  diagram.nodeTemplateMap.add(\"not\", notTemplate);\r\n  diagram.nodeTemplateMap.add(\"nand\", nandTemplate);\r\n  diagram.nodeTemplateMap.add(\"nor\", norTemplate);\r\n  diagram.nodeTemplateMap.add(\"xnor\", xnorTemplate);\r\n  diagram.nodeTemplateMap.add(\"led_red\", ledRedTemplate);\r\n  diagram.nodeTemplateMap.add(\"led_yellow\", ledYellowTemplate);\r\n  diagram.nodeTemplateMap.add(\"led_green\", ledGreenTemplate);\r\n  diagram.nodeTemplateMap.add(\"resistor\", resistorTemplate);\r\n  diagram.nodeTemplateMap.add(\"switch\", switchTemplate);\r\n  diagram.nodeTemplateMap.add(\"2wsa\", twoWaySwitchATemplate);\r\n  diagram.nodeTemplateMap.add(\"2wsb\", twoWaySwitchBTemplate);\r\n  diagram.nodeTemplateMap.add(\"sevensegment\", sevenSegmentTemplate);\r\n  diagram.nodeTemplateMap.add(\"dff\", dffTemplate);\r\n  diagram.nodeTemplateMap.add(\"vcc\", vccTemplate);\r\n  diagram.nodeTemplateMap.add(\"gnd\", gndTemplate);\r\n  \r\n  // share the template map with the Palette\r\n  palette.nodeTemplateMap = diagram.nodeTemplateMap;\r\n\r\n  // \"Others\" category palette\r\n  palette2.nodeTemplateMap = diagram.nodeTemplateMap;\r\n\r\n  // Add something to palette \r\n  palette.model.nodeDataArray = [\r\n    { category: \"vcc\" },\r\n    { category: \"gnd\" },\r\n    { category: \"input\" },\r\n    { category: \"output\" },\r\n    { category: \"clk\" },\r\n    { category: \"and\" },\r\n    { category: \"or\" },\r\n    { category: \"xor\" },\r\n    { category: \"not\" },\r\n    { category: \"nand\" },\r\n    { category: \"nor\" },\r\n    { category: \"xnor\" },\r\n    { category: \"dff\" },\r\n  ];\r\n\r\n  palette2.model.nodeDataArray = [\r\n    { category: \"led_red\" },\r\n    { category: \"led_yellow\" },\r\n    { category: \"led_green\" },\r\n    { category: \"switch\" },\r\n    { category: \"2wsa\" },\r\n    { category: \"2wsb\" },\r\n    { category: \"resistor\" },\r\n    { category: \"sevensegment\"}\r\n  ];\r\n\r\n  loop();\r\n\r\n  function loop() {\r\n    setTimeout(function() { updateStates(); loop(); }, 250);\r\n    count=count+1;\r\n    if(count%60===0){\r\n      count=0;\r\n    }\r\n\r\n    // check universal system variable\r\n    if (sys == 1) newFile();\r\n    else if (sys == 2) load(jsonData);\r\n    else if (sys == 3) save();\r\n  }\r\n  \r\n  function updateStates() {\r\n    var oldskip = diagram.skipsUndoManager;\r\n    diagram.skipsUndoManager = true;\r\n    // do all \"input\" nodes first\r\n    diagram.nodes.each(function(node) {\r\n      if (node.category === \"input\") {\r\n        doInput(node);\r\n      }\r\n    });\r\n    // now we can do all other kinds of nodes\r\n    diagram.nodes.each(function(node) {\r\n      switch (node.category) {\r\n        case \"clk\": doClk(node); break;\r\n        case \"and\": doAnd(node); break;\r\n        case \"or\": doOr(node); break;\r\n        case \"xor\": doXor(node); break;\r\n        case \"not\": doNot(node); break;\r\n        case \"nand\": doNand(node); break;\r\n        case \"nor\": doNor(node); break;\r\n        case \"xnor\": doXnor(node); break;\r\n        case \"dff\": doDff(node); break;\r\n        case \"sevensegment\": do7seg(node); break; \r\n        case \"output\": doOutput(node); break;\r\n        case \"switch\": doSwitch(node); break;\r\n        case \"2wsa\": do2SwitchA(node); break;\r\n        case \"2wsb\": do2SwitchB(node); break;\r\n        case \"resistor\" : doResistor(node); break;\r\n        case \"led_green\" : doLEDgreen(node); break;\r\n        case \"led_yellow\": doLEDyellow(node); break;\r\n        case \"led_red\": doLEDred(node); break;\r\n        case \"vcc\": doVcc(node); break;\r\n        case \"gnd\": doGnd(node); break;\r\n        case \"input\": break;  // doInput already called, above\r\n      }\r\n    });\r\n    diagram.skipsUndoManager = oldskip;\r\n  }\r\n\r\n  function linkIsTrue(link:any) {  // assume the given Link has a Shape named \"SHAPE\"\r\n    return link.findObject(\"SHAPE\").stroke === green;\r\n  }\r\n\r\n  function setOutputLinks(node:any, color:any) {\r\n    node.findLinksOutOf().each(function(link:any) { link.findObject(\"SHAPE\").stroke = color; });\r\n  }\r\n\r\n  function setOutputLinksP(node:any, color:any, pid:any) {\r\n    node.findLinksOutOf(pid).each(function(link:any) { link.findObject(\"SHAPE\").stroke = color; });\r\n  }\r\n\r\n  function doInput(node:any) {\r\n    setOutputLinks(node, node.findObject(\"NODESHAPE\").fill);\r\n  }\r\n\r\n  function doVcc(node:any) {\r\n    setOutputLinks(node,yellow);\r\n  }\r\n\r\n  function doGnd(node:any) {\r\n    setOutputLinks(node,grey);\r\n  }\r\n\r\n  function doSwitch(node:any){\r\n    var stat= node.findObject(\"C\").opacity\r\n    var input= getvalue(node,\"in\")!\r\n    if(input && input!=blue){\r\n      if(stat==1){\r\n        setvalue(node,\"out\",input)\r\n      }\r\n      else{\r\n        setvalue(node,\"out\",blue)\r\n      }\r\n    }\r\n    else{\r\n      setvalue(node,\"out\",blue)\r\n    }\r\n  }\r\n\r\n  function do2SwitchA(node:any){\r\n    var stat= node.findObject(\"B\").opacity\r\n    var input = getvalue(node,\"port3\")!\r\n    if(input && (input!=blue)){\r\n      if(stat==1){\r\n        setvalue(node,\"port1\",input)\r\n        setvalue(node,\"port2\",blue)\r\n      }\r\n      else{\r\n        setvalue(node,\"port1\",blue)\r\n        setvalue(node,\"port2\",input)\r\n      }\r\n    }\r\n    else{\r\n      setvalue(node,\"port1\",blue)\r\n      setvalue(node,\"port2\",blue)\r\n    }\r\n  }\r\n\r\n  function do2SwitchB(node:any){\r\n    var stat= node.findObject(\"B\").opacity\r\n    var in1 = getvalue(node,\"port1\")!\r\n    var in2 = getvalue(node,\"port2\")!\r\n    if(stat==1){\r\n      if(in2){\r\n        setvalue(node,\"port3\",in2)\r\n      }\r\n      else{\r\n        setvalue(node,\"port3\",blue)\r\n      }\r\n    }\r\n    else{\r\n      if(in1){\r\n        setvalue(node,\"port3\",in1)\r\n      }\r\n      else{\r\n        setvalue(node,\"port3\",blue)\r\n      }\r\n    }\r\n  }\r\n\r\n  function doResistor(node:any){\r\n    var input = getvalue(node,\"in\")!\r\n    if(input){\r\n      setvalue(node,\"out\",input)\r\n    }\r\n    else{\r\n      setvalue(node,\"out\",blue)\r\n    }\r\n  }\r\n\r\n  function doLEDgreen(node:any){\r\n    var input = getvalue(node,\"port1\")!\r\n    var gnd = getvalue(node,\"port2\")\r\n    if(input==green && gnd==green){\r\n      node.findObject(\"LED\").fill = green\r\n    }\r\n    else{\r\n      node.findObject(\"LED\").fill = \"grey\"\r\n    }\r\n  }\r\n\r\n  function doLEDyellow(node:any){\r\n    var input = getvalue(node,\"port1\")!\r\n    var gnd = getvalue(node,\"port2\")\r\n    if(input==green && gnd==green){\r\n      node.findObject(\"LED\").fill = \"yellow\"\r\n    }\r\n    else{\r\n      node.findObject(\"LED\").fill = \"grey\"\r\n    }\r\n  }\r\n\r\n  function doLEDred(node:any){\r\n    var input = getvalue(node,\"port1\")!\r\n    var gnd = getvalue(node,\"port2\")\r\n    if(input==green && gnd==green){\r\n      node.findObject(\"LED\").fill = red\r\n    }\r\n    else{\r\n      node.findObject(\"LED\").fill = \"grey\"\r\n    }\r\n  }\r\n\r\n\r\n  function getvalue(node:any,pid:any){\r\n    var value\r\n    node.findLinksInto(pid).each( function(link:any) {value=link.findObject(\"SHAPE\").stroke})\r\n    if(value){\r\n      return value\r\n    }\r\n    else{\r\n      return blue\r\n    }\r\n  }\r\n\r\n  function getoldvalue(node:any,pid:any){\r\n    var value\r\n    node.findLinksInto(pid).each( function(link:any) {value=link.findObject(\"SHAPE\").parameter1})\r\n    return value\r\n  }\r\n\r\n  function setvalue(node:any,pid:any,val:any){\r\n    node.findLinksOutOf(pid).each( function(link:any) {link.findObject(\"SHAPE\").stroke=val})\r\n  }\r\n\r\n  function setoldvalue(node:any,pid:any,val:any){\r\n    node.findLinksOutOf(pid).each( function(link:any) {link.findObject(\"SHAPE\").parameter1=val})\r\n  }\r\n\r\n  function getinput10(node:any){\r\n    var input = [blue,blue,blue,blue,blue,blue,blue,blue,blue,blue]\r\n    \r\n    input[0] = getvalue(node,\"port14\")!\r\n    input[1] = getvalue(node,\"port13\")!\r\n    input[2] = getvalue(node,\"port12\")!\r\n    input[3] = getvalue(node,\"port10\")!\r\n    input[4] = getvalue(node,\"port9\")!\r\n    input[5] = getvalue(node,\"port1\")!\r\n    input[6] = getvalue(node,\"port2\")!\r\n    input[7] = getvalue(node,\"port4\")!\r\n    input[8] = getvalue(node,\"port5\")!\r\n    input[9] = getvalue(node,\"port7\")!\r\n\r\n    return input\r\n  }\r\n\r\n  function getinput8(node:any){\r\n    var input = [blue,blue,blue,blue,blue,blue,blue,blue]\r\n    \r\n    input[0] = getvalue(node,\"port14\")!\r\n    input[1] = getvalue(node,\"port13\")!\r\n    input[2] = getvalue(node,\"port11\")!\r\n    input[3] = getvalue(node,\"port9\")!\r\n    input[4] = getvalue(node,\"port1\")!\r\n    input[5] = getvalue(node,\"port3\")!\r\n    input[6] = getvalue(node,\"port5\")!\r\n    input[7] = getvalue(node,\"port7\")!\r\n\r\n\r\n    return input\r\n  }\r\n\r\n  function getinputdff(node:any){\r\n    var input = [blue,blue,blue,blue,blue,blue,blue,blue,blue,blue]\r\n    \r\n    input[0] = getvalue(node,\"port14\")!\r\n    input[1] = getvalue(node,\"port13\")!\r\n    input[2] = getvalue(node,\"port12\")!\r\n    input[3] = getvalue(node,\"port11\")!\r\n    input[4] = getvalue(node,\"port10\")!\r\n    input[5] = getvalue(node,\"port1\")!\r\n    input[6] = getvalue(node,\"port2\")!\r\n    input[7] = getvalue(node,\"port3\")!\r\n    input[8] = getvalue(node,\"port4\")!\r\n    input[9] = getvalue(node,\"port7\")!\r\n\r\n\r\n    return input\r\n  }\r\n\r\n  function doClk(node:any) {\r\n    if(count%6===0){\r\n      if(node.findObject(\"NODESHAPE\").fill===green){\r\n        node.findObject(\"NODESHAPE\").fill=red\r\n      }\r\n      else{\r\n        node.findObject(\"NODESHAPE\").fill=green\r\n      }\r\n      setOutputLinks(node, node.findObject(\"NODESHAPE\").fill)\r\n    }\r\n\r\n  }\r\n\r\n  function doAnd(node:any) {\r\n    var input = getinput10(node)\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n      if(input[1]===blue || input[2]===blue ){\r\n        setvalue(node,\"port11\",blue)\r\n      }\r\n      else{\r\n        if(input[1]===green && input[2]===green) {setvalue(node,\"port11\",green);}\r\n        else setvalue(node,\"port11\",red)\r\n      }\r\n\r\n      if(input[3]===blue || input[4]===blue ){\r\n        setvalue(node,\"port8\",blue)\r\n      }\r\n      else{\r\n        if(input[3]===green && input[4]===green) {setvalue(node,\"port8\",green);}\r\n        else setvalue(node,\"port8\",red)\r\n      }\r\n\r\n      if(input[5]===blue || input[6]===blue ){\r\n        setvalue(node,\"port3\",blue)\r\n      }\r\n      else{\r\n        if(input[5]===green && input[6]===green) {setvalue(node,\"port3\",green);}\r\n        else setvalue(node,\"port3\",red)\r\n      }\r\n\r\n      if(input[7]===blue || input[8]===blue ){\r\n        setvalue(node,\"port6\",blue)\r\n      }\r\n      else{\r\n        if(input[7]===green && input[8]===green) {setvalue(node,\"port6\",green);}\r\n        else setvalue(node,\"port6\",red)\r\n      }\r\n\r\n    }\r\n    else{\r\n      setvalue(node,\"port11\",blue)\r\n      setvalue(node,\"port8\",blue)\r\n      setvalue(node,\"port3\",blue)\r\n      setvalue(node,\"port6\",blue)\r\n    }\r\n\r\n  }\r\n\r\n  function doNand(node:any) {\r\n    var input = getinput10(node)\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n      if(input[1]===blue || input[2]===blue ){\r\n        setvalue(node,\"port11\",blue)\r\n      }\r\n      else{\r\n        if(input[1]===green && input[2]===green) {setvalue(node,\"port11\",red);}\r\n        else setvalue(node,\"port11\",green)\r\n      }\r\n\r\n      if(input[3]===blue || input[4]===blue ){\r\n        setvalue(node,\"port8\",blue)\r\n      }\r\n      else{\r\n        if(input[3]===green && input[4]===green) {setvalue(node,\"port8\",red);}\r\n        else setvalue(node,\"port8\",green)\r\n      }\r\n\r\n      if(input[5]===blue || input[6]===blue ){\r\n        setvalue(node,\"port3\",blue)\r\n      }\r\n      else{\r\n        if(input[5]===green && input[6]===green) {setvalue(node,\"port3\",red);}\r\n        else setvalue(node,\"port3\",green)\r\n      }\r\n\r\n      if(input[7]===blue || input[8]===blue ){\r\n        setvalue(node,\"port6\",blue)\r\n      }\r\n      else{\r\n        if(input[7]===green && input[8]===green) {setvalue(node,\"port6\",red);}\r\n        else setvalue(node,\"port6\",green)\r\n      }\r\n\r\n    }\r\n    else{\r\n      setvalue(node,\"port11\",blue)\r\n      setvalue(node,\"port8\",blue)\r\n      setvalue(node,\"port3\",blue)\r\n      setvalue(node,\"port6\",blue)\r\n    }\r\n\r\n  }\r\n  function doNot(node:any) {\r\n    var input = getinput8(node)\r\n\r\n    if(input[0]===yellow && input[7]===grey){ //vcc and gnd must active\r\n\r\n      if(input[1]===green) {setvalue(node,\"port12\",red);}\r\n      else{\r\n        if(input[1]===blue){setvalue(node,\"port12\",blue)}\r\n        else setvalue(node,\"port12\",green)\r\n      }\r\n\r\n      if(input[2]===green) {setvalue(node,\"port10\",red);}\r\n      else{\r\n        if(input[2]===blue){setvalue(node,\"port10\",blue)}\r\n        else setvalue(node,\"port10\",green)\r\n      }\r\n\r\n      if(input[3]===green) {setvalue(node,\"port8\",red);}\r\n      else{\r\n        if(input[3]===blue){setvalue(node,\"port8\",blue)}\r\n        else setvalue(node,\"port8\",green)\r\n      }\r\n\r\n      if(input[4]===green) {setvalue(node,\"port2\",red);}\r\n      else{\r\n        if(input[4]===blue){setvalue(node,\"port2\",blue)}\r\n        else setvalue(node,\"port2\",green)\r\n      }\r\n\r\n      if(input[5]===green) {setvalue(node,\"port4\",red);}\r\n      else{\r\n        if(input[5]===blue){setvalue(node,\"port4\",blue)}\r\n        else setvalue(node,\"port4\",green)\r\n      }\r\n\r\n      if(input[6]===green) {setvalue(node,\"port6\",red);}\r\n      else{\r\n        if(input[6]===blue){setvalue(node,\"port6\",blue)}\r\n        else setvalue(node,\"port6\",green)\r\n      }\r\n\r\n    }\r\n    else{\r\n      setvalue(node,\"port12\",blue)\r\n      setvalue(node,\"port10\",blue)\r\n      setvalue(node,\"port8\",blue)\r\n      setvalue(node,\"port2\",blue)\r\n      setvalue(node,\"port4\",blue)\r\n      setvalue(node,\"port6\",blue)\r\n    }\r\n\r\n  }\r\n\r\n  function doOr(node:any) {\r\n    var input = getinput10(node)\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n\r\n      if(input[1]===blue || input[2]===blue) {setvalue(node,\"port11\",blue);}\r\n      else{\r\n        if(input[1]===green || input[2]===green) {setvalue(node,\"port11\",green);}\r\n        else setvalue(node,\"port11\",red)\r\n      }\r\n\r\n      if(input[1]===blue || input[2]===blue) {setvalue(node,\"port8\",blue);}\r\n      else{\r\n        if(input[3]===green || input[4]===green) {setvalue(node,\"port8\",green);}\r\n        else setvalue(node,\"port8\",red)\r\n      }\r\n\r\n      if(input[5]===blue || input[6]===blue) {setvalue(node,\"port3\",blue);}\r\n      else{\r\n        if(input[5]===green || input[6]===green) {setvalue(node,\"port3\",green);}\r\n        else setvalue(node,\"port3\",red)\r\n      }\r\n\r\n      if(input[7]===blue || input[8]===blue) {setvalue(node,\"port6\",blue);}\r\n      else{\r\n        if(input[7]===green || input[8]===green) {setvalue(node,\"port6\",green);}\r\n        else setvalue(node,\"port6\",red)\r\n      }\r\n\r\n    }\r\n    else{\r\n      setvalue(node,\"port11\",blue)\r\n      setvalue(node,\"port8\",blue)\r\n      setvalue(node,\"port3\",blue)\r\n      setvalue(node,\"port6\",blue)\r\n    }\r\n\r\n  }\r\n  function doNor(node:any) {\r\n    var input = getinput10(node)\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n\r\n      if(input[1]===blue || input[2]===blue) {setvalue(node,\"port11\",blue);}\r\n      else if(input[1]===green || input[2]===green) {setvalue(node,\"port11\",red);}\r\n      else setvalue(node,\"port11\",green)\r\n\r\n      if(input[3]===blue || input[4]===blue) {setvalue(node,\"port8\",blue);}\r\n      else if(input[3]===green || input[4]===green) {setvalue(node,\"port8\",red);}\r\n      else setvalue(node,\"port8\",green)\r\n\r\n      if(input[5]===blue || input[6]===blue) {setvalue(node,\"port3\",blue);}\r\n      else if(input[5]===green || input[6]===green) {setvalue(node,\"port3\",red);}\r\n      else setvalue(node,\"port3\",green)\r\n\r\n      if(input[7]===blue || input[8]===blue) {setvalue(node,\"port6\",blue);}\r\n      else if(input[7]===green || input[8]===green) {setvalue(node,\"port6\",red);}\r\n      else setvalue(node,\"port6\",green)\r\n\r\n    }\r\n    else{\r\n      setvalue(node,\"port11\",blue)\r\n      setvalue(node,\"port8\",blue)\r\n      setvalue(node,\"port3\",blue)\r\n      setvalue(node,\"port6\",blue)\r\n    }\r\n\r\n  }\r\n\r\n  function doXor(node:any) {\r\n    var input = getinput10(node)\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n\r\n      if(input[1]===blue || input[2]===blue) {setvalue(node,\"port11\",blue);}\r\n      if(input[1]===green && input[2]===green) {setvalue(node,\"port11\",red);} \r\n      if(input[1]===green && input[2]===red) {setvalue(node,\"port11\",green);}\r\n      if(input[1]===red && input[2]===green) {setvalue(node,\"port11\",green);}\r\n      if(input[1]===red && input[2]===red) {setvalue(node,\"port11\",red);}\r\n\r\n      if(input[3]===blue || input[4]===blue) {setvalue(node,\"port8\",blue);}\r\n      if(input[3]===green && input[4]===green) {setvalue(node,\"port8\",red);} \r\n      if(input[3]===green && input[4]===red) {setvalue(node,\"port8\",green);}\r\n      if(input[3]===red && input[4]===green) {setvalue(node,\"port8\",green);}\r\n      if(input[3]===red && input[4]===red) {setvalue(node,\"port8\",red);}\r\n\r\n      if(input[5]===blue || input[6]===blue) {setvalue(node,\"port3\",blue);}\r\n      if(input[5]===green && input[6]===green) {setvalue(node,\"port3\",red);} \r\n      if(input[5]===green && input[6]===red) {setvalue(node,\"port3\",green);}\r\n      if(input[5]===red && input[6]===green) {setvalue(node,\"port3\",green);}\r\n      if(input[5]===red && input[6]===red) {setvalue(node,\"port3\",red);}\r\n\r\n      if(input[7]===blue || input[8]===blue) {setvalue(node,\"port6\",blue);}\r\n      if(input[7]===green && input[8]===green) {setvalue(node,\"port6\",red);} \r\n      if(input[7]===green && input[8]===red) {setvalue(node,\"port6\",green);}\r\n      if(input[7]===red && input[8]===green) {setvalue(node,\"port6\",green);}\r\n      if(input[7]===red && input[8]===red) {setvalue(node,\"port6\",red);}\r\n    }\r\n    else{\r\n      setvalue(node,\"port11\",blue);\r\n      setvalue(node,\"port8\",blue);\r\n      setvalue(node,\"port3\",blue);\r\n      setvalue(node,\"port6\",blue);\r\n    }\r\n  }\r\n\r\n  function doXnor(node:any) {\r\n    var input = getinput10(node)\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n\r\n      if(input[1]===blue || input[2]===blue) {setvalue(node,\"port11\",blue);}\r\n      if(input[1]===green && input[2]===green) {setvalue(node,\"port11\",green);} \r\n      if(input[1]===green && input[2]===red) {setvalue(node,\"port11\",red);}\r\n      if(input[1]===red && input[2]===green) {setvalue(node,\"port11\",red);}\r\n      if(input[1]===red && input[2]===red) {setvalue(node,\"port11\",green);}\r\n\r\n      if(input[3]===blue || input[4]===blue) {setvalue(node,\"port8\",blue);}\r\n      if(input[3]===green && input[4]===green) {setvalue(node,\"port8\",green);} \r\n      if(input[3]===green && input[4]===red) {setvalue(node,\"port8\",red);}\r\n      if(input[3]===red && input[4]===green) {setvalue(node,\"port8\",red);}\r\n      if(input[3]===red && input[4]===red) {setvalue(node,\"port8\",green);}\r\n\r\n      if(input[5]===blue || input[6]===blue) {setvalue(node,\"port3\",blue);}\r\n      if(input[5]===green && input[6]===green) {setvalue(node,\"port3\",green);} \r\n      if(input[5]===green && input[6]===red) {setvalue(node,\"port3\",red);}\r\n      if(input[5]===red && input[6]===green) {setvalue(node,\"port3\",red);}\r\n      if(input[5]===red && input[6]===red) {setvalue(node,\"port3\",green);}\r\n\r\n      if(input[7]===blue || input[8]===blue) {setvalue(node,\"port6\",blue);}\r\n      if(input[7]===green && input[8]===green) {setvalue(node,\"port6\",green);} \r\n      if(input[7]===green && input[8]===red) {setvalue(node,\"port6\",red);}\r\n      if(input[7]===red && input[8]===green) {setvalue(node,\"port6\",red);}\r\n      if(input[7]===red && input[8]===red) {setvalue(node,\"port6\",green);}\r\n    }\r\n    else{\r\n      setvalue(node,\"port11\",blue);\r\n      setvalue(node,\"port8\",blue);\r\n      setvalue(node,\"port3\",blue);\r\n      setvalue(node,\"port6\",blue);\r\n    }\r\n  }\r\n\r\n  function getinput7seg(node:any){\r\n    var input = [black,black,black,black,black,black,black,black,black,black]\r\n    //console.log(input)\r\n    input[0] = getvalue(node,\"portA\")!\r\n    input[1] = getvalue(node,\"portB\")!\r\n    input[2] = getvalue(node,\"portC\")!\r\n    input[3] = getvalue(node,\"portD\")!\r\n    input[4] = getvalue(node,\"portE\")!\r\n    input[5] = getvalue(node,\"portF\")!\r\n    input[6] = getvalue(node,\"portG\")!\r\n    input[7] = getvalue(node,\"portVcc\")!\r\n    input[8] = getvalue(node,\"portCom\")!\r\n    input[9] = getvalue(node,\"portDP\")!\r\n\r\n    return input\r\n  }\r\n\r\n  function do7seg(node:any){\r\n    var input = getinput7seg(node)\r\n    //console.log(input)\r\n    if(input[7]===yellow && input[8]===yellow){\r\n\r\n      if (input[0]==green) {node.findObject(\"A\").fill=red} else {node.findObject(\"A\").fill=black} \r\n      if (input[1]==green) {node.findObject(\"B\").fill=red} else {node.findObject(\"B\").fill=black} \r\n      if (input[2]==green) {node.findObject(\"C\").fill=red} else {node.findObject(\"C\").fill=black} \r\n      if (input[3]==green) {node.findObject(\"D\").fill=red} else {node.findObject(\"D\").fill=black} \r\n      if (input[4]==green) {node.findObject(\"E\").fill=red} else {node.findObject(\"E\").fill=black} \r\n      if (input[5]==green) {node.findObject(\"F\").fill=red} else {node.findObject(\"F\").fill=black} \r\n      if (input[6]==green) {node.findObject(\"G\").fill=red} else {node.findObject(\"G\").fill=black} \r\n      if (input[9]==green) {node.findObject(\"DP\").fill=red} else {node.findObject(\"DP\").fill=black} \r\n    \r\n    }\r\n    else{\r\n      node.findObject(\"A\").fill=black\r\n      node.findObject(\"B\").fill=black\r\n      node.findObject(\"C\").fill=black\r\n      node.findObject(\"D\").fill=black\r\n      node.findObject(\"E\").fill=black\r\n      node.findObject(\"F\").fill=black\r\n      node.findObject(\"G\").fill=black\r\n      node.findObject(\"DP\").fill=black\r\n    }\r\n  }\r\n\r\n  function doDff(node:any) {\r\n    var input = getinputdff(node)\r\n    //console.log(\"hello\")\r\n\r\n    //console.log(getoldvalue(node,\"port9\"))\r\n\r\n    if(input[0]===yellow && input[9]===grey){ //vcc and gnd must active\r\n\r\n      if(input[1]===blue || input[4]===blue || input[3]===blue){\r\n        setvalue(node,\"port9\",blue)\r\n        setvalue(node,\"port8\",blue)\r\n      }\r\n      else if(input[1]===green){ //check clr\r\n        setvalue(node,\"port9\",red)\r\n        setvalue(node,\"port8\",green)\r\n      }\r\n      else if(input[4]===green){ //check pre\r\n        setvalue(node,\"port9\",green)\r\n        setvalue(node,\"port8\",red)\r\n      }\r\n      else if(input[3]===green){ //check clk change\r\n        //console.log(input)\r\n        if(input[2]===green) {setvalue(node,\"port9\",green)}\r\n        else {setvalue(node,\"port9\",red)}\r\n\r\n        if(input[2]===green) {setvalue(node,\"port8\",red)}\r\n        else setvalue(node,\"port8\",green)\r\n\r\n      }\r\n\r\n      //console.log(input)\r\n\r\n\r\n      //----------------------------------------------\r\n\r\n      if(input[5]===blue || input[8]===blue || input[7]===blue){\r\n        setvalue(node,\"port5\",blue)\r\n        setvalue(node,\"port6\",blue)\r\n      }\r\n      else if(input[5]===green){ //check clr\r\n        setvalue(node,\"port5\",red)\r\n        setvalue(node,\"port6\",green)\r\n      }\r\n      else if(input[8]===green){ //check pre\r\n        setvalue(node,\"port5\",green)\r\n        setvalue(node,\"port6\",red)\r\n      }\r\n      else if(input[7]===green){ //check clk change\r\n\r\n        if(input[6]===green) {setvalue(node,\"port5\",green)}\r\n        else {setvalue(node,\"port5\",red)}\r\n\r\n        if(input[6]===green) {setvalue(node,\"port6\",red)}\r\n        else setvalue(node,\"port6\",green)\r\n\r\n      }\r\n\r\n    }\r\n    else{\r\n      setvalue(node,\"port9\",blue)\r\n      setvalue(node,\"port8\",blue)\r\n      setvalue(node,\"port5\",blue)\r\n      setvalue(node,\"port6\",blue)\r\n    }\r\n\r\n  }\r\n\r\n  function doOutput(node:any) {\r\n    // assume there is just one input link\r\n    // we just need to update the node's Shape.fill\r\n    node.linksConnected.each(function(link:any) { node.findObject(\"NODESHAPE\").fill = link.findObject(\"SHAPE\").stroke; });\r\n  }\r\n\r\n  async function newFile() {\r\n    let isConfirm = window.confirm(\"All unsaved changes will be lost\\nProceed to create a new file?\");\r\n    if (isConfirm) {\r\n      const newData = {};\r\n      diagram.model = go.Model.fromJson(newData);\r\n      console.log('new file');\r\n    }\r\n    sys = 0;\r\n  }\r\n\r\n  async function save() {\r\n    var data = diagram.model.toJson();\r\n    jsonData = data;\r\n    console.log('save', jsonData);\r\n    diagram.isModified = false;\r\n    var blob = new Blob([jsonData as BlobPart], {type : 'application/json'});\r\n    FileSaver.saveAs(blob, \"diagram.json\");\r\n    sys = 0;\r\n  }\r\n\r\n  async function load(Data: any) {\r\n    diagram.model = go.Model.fromJson(Data);\r\n    console.log('load', Data);\r\n    sys = 0;\r\n  }\r\n\r\n  return diagram;\r\n}\r\n\r\n// render function...\r\nfunction Main() {\r\n\r\n  useEffect(() => {\r\n    document.title = \"Online Simple Circuit\"\r\n  }, []);\r\n\r\n  // for alert when exit page without saving change. Uncomment to enable.\r\n  /*\r\n  window.addEventListener(\"beforeunload\", (ev) => \r\n  {  \r\n    ev.preventDefault();\r\n    return ev.returnValue = 'Are you sure you want to close?';\r\n  });\r\n  */\r\n\r\n  function setSystemValue(val: any) {\r\n    if (val == 1) sys = 1;\r\n    else if (val == 2) sys = 2;\r\n    else if (val == 3) sys = 3;\r\n    else sys = 0;\r\n  }\r\n\r\n  function loadFile(e: any) {\r\n    e.preventDefault()\r\n    var reader = new FileReader()\r\n    reader.onload = async (e) => { \r\n      const text = (e.target?.result);\r\n      if (text) jsonData = text;\r\n    };\r\n    reader.readAsText(e.target.files[0]);\r\n    setSystemValue(2);\r\n  }\r\n\r\n  function handleJsonText(e: any) {\r\n    jsonData = e;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"absolute flex items-center w-full h-16 bg-black\">\r\n        <div className=\"noselect mx-4 text-white text-4xl\">OSC</div>\r\n        <button onClick={(e) => setSystemValue(1)} className={Button}>New</button>\r\n        <button className={Button}>\r\n          <label htmlFor=\"load-file\">Load</label>\r\n          <input type=\"file\" name=\"load-file\" id=\"load-file\" onChange={(e) => loadFile(e)} className=\"pl-4\"/>\r\n        </button>\r\n        <button onClick={(e) => setSystemValue(3)} className={Button}>Save</button>\r\n        <div className=\"px-8 py-5 flex\">\r\n          <textarea \r\n            placeholder=\"JSON text data here\" \r\n            className=\"m-2 focus:outline-none\" \r\n            onChange={(e) => handleJsonText(e.target.value)}>\r\n          </textarea>\r\n          <button onClick={(e) => setSystemValue(2)} className={Button}>Load JSON</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex\">\r\n        <div id=\"diagramDiv\" className=\"mt-16 w-4/5 bg-gray-200 relative border-b border-black\">\r\n          <ReactDiagram\r\n            initDiagram={initDiagram}\r\n            divClassName='main-diagram'\r\n            nodeDataArray={[]}\r\n          />\r\n          <div className=\"ml-4\">\r\n            <p>Drag and drop component from the right side</p>\r\n            <div className=\"flex\">\r\n              <h1 className=\"pr-5\">Ctrl+Z to Undo</h1>\r\n              <h1 className=\"pr-5\">Ctrl+Y to Redo</h1>\r\n              <h1>Mouse wheel to zoom in/out</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{height: \"90vh\"}} className=\"tabs mt-16 w-1/5 flex flex-col bg-white border-l border-b border-black\">\r\n          <div className=\"tab\">\r\n            <input type=\"radio\" id=\"rd1\" name=\"rd\" checked={true}></input>\r\n            <label className=\"noselect tab-label\" htmlFor=\"rd1\">IC Gates</label>\r\n            <div className=\"tab-content\">\r\n              <div id=\"palette\" style={{height: '340px'}}></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"tab\">\r\n            <input type=\"radio\" id=\"rd2\" name=\"rd\"></input>\r\n            <label className=\"noselect tab-label\" htmlFor=\"rd2\">Others items</label>\r\n            <div className=\"tab-content\">\r\n              <div id=\"palette2\" style={{height: '340px'}}></div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Main from './components/main';\r\n\r\nconst App = () => {\r\n  return(\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/main\" component={Main} />\r\n        <Redirect to=\"/main\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}